<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABIJJREFUWEftl7FL
        I1EQh/NnXJsypWXgqsAVF7AwYGEghQQLCSkOsQppglgEsZBgIcFC0ELYK4RccRCbgzQHWhykOViLK1Ja
        Wlzxbr7ZnfhWk82aFMfBLQx5u9nd9+3Mb+bNy+X+H/+yB8YPzmH+N9zdv75m/9c7Q1fcHrjCZuDWtgJX
        2R8knl3JF06OXDtwhTajCMr9fpLzQK7LBRnbBMUdAdkduXo3dHtnE3dwEdneaehKzaEAXq4OxoSt8wjq
        8vuTQuEdzrn+EqjanbhKJ1SrHsYm11rnAnf16IAu7cjHrHJouDwAA7RQ2q+FEWgFEhCz+vHEYYBVO3cS
        yhW8pRNIeIAyuEIt8k7lnNAljXv5r9SU8AlE4yRphLPaGS8PBQThYmIf7BlURnLPK3AJS34jmGoKEDPz
        VHX/OXyV5qUrNweSEPJMe0EiAGUw6oH4qMTeIYxAR2KPPRnrhEyrH441XGqIXfTUuxFNyeTTpJBx8C26
        XljvpeuMEJiXTNwaMg2lc4Xac9gM2NctmmlItmnmAfM5mrj/5dHlP/bE+i64jc4PrkJXrPUXCx8AC42m
        P9qKNWTXgzgjX9Yt7iftj66TMJdfH6UsjN3RRegYA8R543CJ2uVrpnUbh0w9Nb9okmE2Mb94xczO6+3h
        Yu/MKhvmocL7KAMjQ2tBoj75zxY2+grkg6Cb6bmMy80V6tSzvONMI6xyzKt7ZBVLiQIAEttAEoLx8P5J
        ykEG/axSWHmWdM6vR2mNXnwQYMwAevfhKFvIqu2RK++PdL0qbEm9kF80gQjTgAnTkWSOecG840MAggFa
        rGWs4o3unQsnTm3868mNfkgpED2QpnsnY4XTRVRgfUA8A8RUOzIpMAbh//auw8VFkZcDw0uBufsZvSzx
        xfGE1BZSmwr9EooiiH4a3ZGGrX8z0ffwPjO/cqfKhPDwEJ6xL/KB+HoMINqNNdI/5dg7HjomJzwURioz
        Ymb5yKRXwmBhSngnTtnWWejKn4YuL00Zv5leOuMmCirH6GGU/o7i7jARqpfhQvB0isuC2HNaMs5zbpxS
        OvReJkTElhl+MbPKS8u6DJAuSXKYdwDCQ7OWn+n7Se2pV6ygxUI2ILJsWSCDMA+1bivzw6ZZIalt5Z0x
        mrFUZkFk9Sa7lvGSHyZAgMOChzkeL+0ONIPMSGkmNs8AQ0tBa0GL8db21PeKwaR6iLbBilpJxG1hYUya
        G4w1YOw6skKhE98rrVvxinhHD29Hk5AC7QCpjPl7LMboBs8A47eoQFGhF2lK05sQdXIK5nsrbZGe+17t
        f+P2FCC/oafBL0lBBWxNvFzcjopgfkPGcp2XohPzEACZNLToKwmPLrIxkG15/G0QezTbr5Xb4VT8eGiW
        hrg2V9SLgPifzR+bQIPhV4HizaLBlPbH2j+3TiMPaV/uZZZpaGGlzgLFPbQagFXasvp7MOzRdK+/mWy+
        zDvoyNdQalHMCuPfx8LJYqmAsoNodGY37b6G/Eo9N8OWgXnLMwCZl0xPUc7Pb4Pf8v6l7jWgvwrhk5tH
        0oD+AEJ20DCJfkioAAAAAElFTkSuQmCC
</value>
  </data>
</root>