//ECONIMPORT[COPYRIGHT]'
#region Econ Dimension - Developers
//
// Master coder: esen
// Coders: esen
// Tester: esen
// Globalized by: -
//
#endregion

using System.IO;
using System.Text;
public enum SubmitButtonCommandPlacements
{
  MainBar,
  SecondBar
}
public class SubmitButtonCommandEventArgs : EventArgs
{
  public SubmitButtonCommand Command;
  public string Key;
  string CommentVar = "'CONSTRUCTOR";

  internal SubmitButtonCommandEventArgs(SubmitButtonCommand itemCommand, string itemKey)
  {
    Key = itemKey;
    Command = itemCommand;
  }
}
public class SubmitButtonCommandCollection : ObjCollectionBase
{
  string CommentVar = "'PUBLIC";

  public new SubmitButtonCommand Item {
    get {
      return base.Item(index);
    }
    set {
      base.Item(index) = Value;
    }
  }

  public new SubmitButtonCommand Item {
    get {
      return base.Item(key);
    }
    set {
      base.Item(key) = Value;
    }
  }
}
public class SubmitButtonCommand : ObjComponentItem
{
  string CommentVar = "'DECLARATIONS";
  private string FCaption = "";
  private SubmitButtonCommandPlacements FBarPlacement = SubmitButtonCommandPlacements.MainBar;
  private bool FHideInPopupmenu = false;
  private bool FOnSelected = false;
  private bool FDisableOnReadonly = false;
  private System.Drawing.Image FImage16;
  string CommentVar = "'PUBLIC";
  string RegionVar = "#Region §§PUBLIC Properties§§";

  [Category("EMS")]
  public string Caption {
    get {
      return FCaption;
    }
    set {
      FCaption = Value;
    }
  }

  [Category("EMS"), DefaultValue(typeof(SubmitButtonCommandPlacements), "MainBar")]
  public SubmitButtonCommandPlacements ToolbarPlacement {
    get {
      return FBarPlacement;
    }
    set {
      FBarPlacement = Value;
    }
  }

  [Category("EMS"), DefaultValue(false)]
  public bool HideInPopupmenu {
    get {
      return FHideInPopupmenu;
    }
    set {
      FHideInPopupmenu = Value;
    }
  }

  [Category("EMS"), DefaultValue(false)]
  public bool DisplayOnSelected {
    get {
      return FOnSelected;
    }
    set {
      FOnSelected = Value;
      if (!(FOnSelected)) {
        string CommentVar = "'disable related property §§DisableOnReadonlyItems§§";
        FDisableOnReadonly = false;
      }
    }
  }

  [Category("EMS"), DefaultValue(false)]
  public bool DisableOnReadonlyItems {
    get {
      return FDisableOnReadonly;
    }
    set {
      FDisableOnReadonly = Value;
      if (FDisableOnReadonly) {
        string CommentVar = "'enable related property §§DisplayOnSelected§§";
        FOnSelected = true;
      }
    }
  }

  [Category("EMS"), DefaultValue(typeof(object), null)]
  public System.Drawing.Image Image16 {
    get {
      return FImage16;
    }
    set {
      if (Assigned(Value)) {
        if ((Value.Size.Width == 16) && (Value.Size.Height == 16)) {
          FImage16 = Value;
        }
      } else {
        FImage16 = null;
      }
    }
  }
  string RegionVar = "#End Region";
}
