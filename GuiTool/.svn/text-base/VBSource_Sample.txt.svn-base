'ECONIMPORT[COPYRIGHT]'
#Region "Econ Dimension - Developers"
'
' Master coder: esen
' Coders: esen
' Tester: esen
' Globalized by: -
'
#End Region

Imports System.IO
Imports System.Text

#Region "Econ Dimension - Developers"
'
' Master coder: esen
' Coders: esen
' Tester: esen
' Globalized by: -
'
#End Region


#Region "ENUMS"

  Public Enum SubmitButtonCommandPlacements
    MainBar
    SecondBar
  End Enum

#End Region

#Region "EVENTARGS"

  Public Class SubmitButtonCommandEventArgs
    Inherits EventArgs

    Public Command As SubmitButtonCommand
    Public Key As String

    'CONSTRUCTOR
    Friend Sub New(ByVal itemCommand As SubmitButtonCommand, _
                   ByVal itemKey As String)
      Key = itemKey
      Command = itemCommand
    End Sub

  End Class

#End Region

#Region "COLLECTION"

  Public Class SubmitButtonCommandCollection
    Inherits ObjCollectionBase

    'PUBLIC
    Default Public Shadows Property Item(ByVal index As Integer) As SubmitButtonCommand
      Get
        Return MyBase.Item(index)
      End Get
      Set(ByVal Value As SubmitButtonCommand)
        MyBase.Item(index) = Value
      End Set
    End Property

    Default Public Shadows Property Item(ByVal key As String) As SubmitButtonCommand
      Get
        Return MyBase.Item(key)
      End Get
      Set(ByVal Value As SubmitButtonCommand)
        MyBase.Item(key) = Value
      End Set
    End Property

  End Class

#End Region

  Public Class SubmitButtonCommand
    Inherits ObjComponentItem

    'DECLARATIONS
    Private FCaption As String = ""
    Private FBarPlacement As SubmitButtonCommandPlacements = SubmitButtonCommandPlacements.MainBar
    Private FHideInPopupmenu As Boolean = False
    Private FOnSelected As Boolean = False
    Private FDisableOnReadonly As Boolean = False
    Private FImage16 As System.Drawing.Image

    'PUBLIC
#Region "PUBLIC Properties"

    <Category("EMS")> _
    Public Property Caption() As String
      Get
        Return FCaption
      End Get
      Set(ByVal Value As String)
        FCaption = Value
      End Set
    End Property

    <Category("EMS"), _
     DefaultValue(GetType(SubmitButtonCommandPlacements), "MainBar")> _
    Public Property ToolbarPlacement() As SubmitButtonCommandPlacements
      Get
        Return FBarPlacement
      End Get
      Set(ByVal Value As SubmitButtonCommandPlacements)
        FBarPlacement = Value
      End Set
    End Property

    <Category("EMS"), _
     DefaultValue(False)> _
    Public Property HideInPopupmenu() As Boolean
      Get
        Return FHideInPopupmenu
      End Get
      Set(ByVal Value As Boolean)
        FHideInPopupmenu = Value
      End Set
    End Property

    <Category("EMS"), _
     DefaultValue(False)> _
    Public Property DisplayOnSelected() As Boolean
      Get
        Return FOnSelected
      End Get
      Set(ByVal Value As Boolean)
        FOnSelected = Value
        If Not FOnSelected Then
          'disable related property "DisableOnReadonlyItems"
          FDisableOnReadonly = False
        End If
      End Set
    End Property

    <Category("EMS"), _
     DefaultValue(False)> _
    Public Property DisableOnReadonlyItems() As Boolean
      Get
        Return FDisableOnReadonly
      End Get
      Set(ByVal Value As Boolean)
        FDisableOnReadonly = Value
        If FDisableOnReadonly Then
          'enable related property "DisplayOnSelected"
          FOnSelected = True
        End If
      End Set
    End Property

    <Category("EMS"), _
     DefaultValue(GetType(Object), Nothing)> _
    Public Property Image16() As System.Drawing.Image
      Get
        Return FImage16
      End Get
      Set(ByVal Value As System.Drawing.Image)
        If Assigned(Value) Then
          If (Value.Size.Width = 16) AndAlso _
             (Value.Size.Height = 16) Then
            FImage16 = Value
          End If
        Else
          FImage16 = Nothing
        End If
      End Set
    End Property

#End Region

  End Class

