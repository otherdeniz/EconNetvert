<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAEXElEQVRYR+2Xv2vbQBTH/Wd09egxo6GT
        oUMNGWLoEEOGYjIE46GETMaLKRlC6FBMhmAyFJKhoA4Fdyg4S8FLIRkKXgrK0CFjxgwdru/z7p5zciIl
        dmhLoV94SDqfdB+/XzqV/uuf1vTCOSxcqs7Ob4+ZWv2xq74cucqLxK2sJ66xM7pz3lJyolIvcZUeZx7A
        /byW60TGZUDOdaKouikgWxPX2kvd9uGle/3O2/ZB6mqdsQAePx6MBbtHHur467VC4R2uGZ8Hau5dukY/
        VWvuBpOx7pHAnVw55tQ25c88RhqaCMAALZRmFkakQAJi1nrjDbBm/0xC+Qhv6QISHoPgWNmQQYFrHBG6
        rDGX32odCZ9AtN9mjXA2+9PloYAgXLYYx5kn9FpOMtcBXFReS2Y5FZt5qrlzE75G59jVOyMpCLmnd08h
        sIAtph4Iasg1Y4QRaJ/sN0CISmvtThVCjWSXfBp8lJySxcO0EufJFz9eWR0UAxEC85Ilt4YseKiy4UFi
        4HCrivC0pdq08oD54Bcefrpy5ecDsaFLTv3165PUVTeGxUAIAAuNXossh2w8iRJeb4pE2e+/z8Icf76S
        tjB1++9SPWeM6/buEr0LAAtj9zSETD2V3zTJG1uYI14xs+tWb7w4DFIg8VDlqYfy5vMKb4ZpGVXWhrdA
        yJv4vN6R5ywroGYibIRVFH6+JaqKV8kMJNhIvMtxfH4t7eAB+fNYUc7lVV/W5EsMEhtAT57tPwyo2Zu4
        +s5E31eVdekXciQnSMIw5U4Rpn2pHPOCeSeGMGO8uvHAhtneO3PppVOb/rh2k2/SCiQfKNPtt1OF05eo
        wIZbVHgGiFnuBJgYxGzwPr2/KSJgeBgwZ9/9zZl/HBaknCltOnS4VQUUjY/8ae9NNGzDj5f6HJ5nFnfu
        QhEebsAz9m9iIGAMiO3GCuVfoO03sjOQxQkPjZHOTDLz+ghTikUYLEwZmADUPUxd/dXYlWVTxjHctrDo
        X2hyMSl+RnVrnAnVfLhIeHaKYfrSAqZ0VHJTjkViQbxzFwyhovOyZQ3TF5L1LvMOQHgor9urKO1MmAKQ
        5Q5AVFmYvpC0qwcIA+qeNvLDplUhpW0e4Zycib3DC5PqWsZLBkGYAOEcSy5ynlXbGs08gVHSLBzDsKVg
        a8EWY9GdYOwVgyn0ENsGFscjNUnuMCygYy1zg7ENGDvEh0KRJ1kQ8YocVTkv6BLbAUoZi7+xOCdvDCbe
        ogJFMwxTc6VeAKbvvYLMQ3q+qHT/G7angMSbeTb4NWmogK2Il6svfRMsr8m5jHM/eWIeQrG3cnPoPhEe
        fckGIPvkiT+D+D6z77V6L50l/3xlGQxaGgjx8cdHoMHMgMLHosHUdqa6f+4eeA+RJ40IxHIoN6EXFVsN
        wBo9eftHMHyj6bf+i+zmy7zjYW5yqLApLiNenLwsFVC+INr9u7cUcQ7FnTq3wn63ADIIyydTmPLnpYvj
        lb8JEUtJgsLQnEqlX0J20DDQBW7PAAAAAElFTkSuQmCC
</value>
  </data>
</root>